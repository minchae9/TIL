"""
타일링 dp 문제
내가 이해한 방법:
길이 N인 타일을 채울 때,
 i) 뒤에서 1짜리를 자를 수 있다면:
    (N-1) + (1) --- 1가지
 ii) 뒤에서 2짜리를 자를 수 있다면:
    (N-1) + (2*2짜리 1개) or (N-1) + (1*2짜리 2개) --- 2가지
    (*참고: 1*2짜리가 긴 방향으로 겹쳐진 경우는 i)의 경우에 해당한다.)
 iii) 다른 경우: 없음. 왜냐하면 타일 길이는 최소 1, 최대 2이니까.
 => f(N)은 f(N-1)의 가짓수 + f(N-2)의 가짓수*2
"""

arr = [0]*31
arr[1] = 1
arr[2] = 3
T = int(input())
for t in range(1, T+1):
    N = int(input())
    q = N // 10
    for k in range(3, q+1):             # arr[q]에 가로 길이가 q*10일 때의 가짓수를 넣음
        arr[k] = arr[k-1] + 2*arr[k-2]
    print(f'#{t} {arr[q]}')